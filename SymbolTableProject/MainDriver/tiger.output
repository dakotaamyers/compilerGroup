State 1 conflicts: 1 shift/reduce
State 89 conflicts: 13 shift/reduce
State 90 conflicts: 12 shift/reduce
State 113 conflicts: 12 shift/reduce
State 115 conflicts: 12 shift/reduce
State 130 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 decs: /* empty */
    3     | t_decs

    4 t_decs: dec t_decs
    5       | dec

    6 dec: typedec
    7    | vardec
    8    | fundec

    9 typedec: TYPE ID EQ tpinfo

   10 tpinfo: ID
   11       | LBRACE fields RBRACE
   12       | ARRAY OF ID

   13 fields: /* empty */
   14       | t_fields

   15 t_fields: ID COLON ID
   16         | ID COLON ID COMMA t_fields

   17 vardec: VAR ID ASSIGN exp
   18       | VAR ID COLON ID ASSIGN exp

   19 fundec: FUNCTION ID LPAREN fields RPAREN EQ exp
   20       | FUNCTION ID LPAREN fields RPAREN COLON ID EQ exp

   21 lvalue: ID
   22       | lvalue DOT ID
   23       | lvalue LBRACK exp RBRACK
   24       | ID LBRACK exp RBRACK

   25 exp: lvalue
   26    | exp PLUS exp
   27    | exp MINUS exp
   28    | exp TIMES exp
   29    | exp DIVIDE exp
   30    | MINUS exp
   31    | expseq
   32    | INT
   33    | STRING
   34    | ID LPAREN paramlist RPAREN
   35    | exp EQ exp
   36    | exp NEQ exp
   37    | exp LT exp
   38    | exp LE exp
   39    | exp GT exp
   40    | exp GE exp
   41    | exp AND exp
   42    | exp OR exp
   43    | ID LBRACE fieldlist RBRACE
   44    | ID LBRACK exp RBRACK OF exp
   45    | lvalue ASSIGN exp
   46    | IF exp THEN exp ELSE exp
   47    | IF exp THEN exp
   48    | WHILE exp DO exp
   49    | FOR ID ASSIGN exp TO exp DO exp
   50    | BREAK
   51    | LET decs IN explist END
   52    | NIL

   53 expseq: LPAREN explist RPAREN

   54 explist: /* empty */
   55        | t_explist

   56 t_explist: exp
   57          | exp SEMICOLON t_explist

   58 fieldlist: /* empty */
   59          | t_fieldlist

   60 t_fieldlist: ID EQ exp
   61            | ID EQ exp COMMA t_fieldlist

   62 paramlist: /* empty */
   63          | t_paramlist

   64 t_paramlist: exp
   65            | exp COMMA t_paramlist


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 9 10 12 15 16 17 18 19 20 21 22 24 34 43 44 49 60 61
STRING (259) 33
INT (260) 32
COMMA (261) 16 61 65
COLON (262) 15 16 18 20
SEMICOLON (263) 57
LPAREN (264) 19 20 34 53
RPAREN (265) 19 20 34 53
LBRACK (266) 23 24 44
RBRACK (267) 23 24 44
LBRACE (268) 11 43
RBRACE (269) 11 43
DOT (270) 22
ARRAY (271) 12
IF (272) 46 47
THEN (273) 46 47
ELSE (274) 46
WHILE (275) 48
FOR (276) 49
TO (277) 49
DO (278) 48 49
LET (279) 51
IN (280) 51
END (281) 51
OF (282) 12 44
BREAK (283) 50
NIL (284) 52
FUNCTION (285) 19 20
VAR (286) 17 18
TYPE (287) 9
ASSIGN (288) 17 18 45 49
OR (289) 42
AND (290) 41
GE (291) 40
GT (292) 39
LE (293) 38
LT (294) 37
NEQ (295) 36
EQ (296) 9 19 20 35 60 61
MINUS (297) 27 30
PLUS (298) 26
DIVIDE (299) 29
TIMES (300) 28
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
decs (49)
    on left: 2 3, on right: 51
t_decs (50)
    on left: 4 5, on right: 3 4
dec (51)
    on left: 6 7 8, on right: 4 5
typedec (52)
    on left: 9, on right: 6
tpinfo (53)
    on left: 10 11 12, on right: 9
fields (54)
    on left: 13 14, on right: 11 19 20
t_fields (55)
    on left: 15 16, on right: 14 16
vardec (56)
    on left: 17 18, on right: 7
fundec (57)
    on left: 19 20, on right: 8
lvalue (58)
    on left: 21 22 23 24, on right: 22 23 25 45
exp (59)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
    43 44 45 46 47 48 49 50 51 52, on right: 1 17 18 19 20 23 24 26
    27 28 29 30 35 36 37 38 39 40 41 42 44 45 46 47 48 49 56 57 60
    61 64 65
expseq (60)
    on left: 53, on right: 31
explist (61)
    on left: 54 55, on right: 51 53
t_explist (62)
    on left: 56 57, on right: 55 57
fieldlist (63)
    on left: 58 59, on right: 43
t_fieldlist (64)
    on left: 60 61, on right: 59 61
paramlist (65)
    on left: 62 63, on right: 34
t_paramlist (66)
    on left: 64 65, on right: 63 65


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    program  go to state 12
    lvalue   go to state 13
    exp      go to state 14
    expseq   go to state 15


state 1

   21 lvalue: ID .
   24       | ID . LBRACK exp RBRACK
   34 exp: ID . LPAREN paramlist RPAREN
   43    | ID . LBRACE fieldlist RBRACE
   44    | ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 16
    LBRACK  shift, and go to state 17
    LBRACE  shift, and go to state 18

    LBRACK    [reduce using rule 21 (lvalue)]
    $default  reduce using rule 21 (lvalue)


state 2

   33 exp: STRING .

    $default  reduce using rule 33 (exp)


state 3

   32 exp: INT .

    $default  reduce using rule 32 (exp)


state 4

   53 expseq: LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    $default  reduce using rule 54 (explist)

    lvalue     go to state 13
    exp        go to state 19
    expseq     go to state 15
    explist    go to state 20
    t_explist  go to state 21


state 5

   46 exp: IF . exp THEN exp ELSE exp
   47    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 22
    expseq  go to state 15


state 6

   48 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 23
    expseq  go to state 15


state 7

   49 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 24


state 8

   51 exp: LET . decs IN explist END

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    $default  reduce using rule 2 (decs)

    decs     go to state 28
    t_decs   go to state 29
    dec      go to state 30
    typedec  go to state 31
    vardec   go to state 32
    fundec   go to state 33


state 9

   50 exp: BREAK .

    $default  reduce using rule 50 (exp)


state 10

   52 exp: NIL .

    $default  reduce using rule 52 (exp)


state 11

   30 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 34
    expseq  go to state 15


state 12

    0 $accept: program . $end

    $end  shift, and go to state 35


state 13

   22 lvalue: lvalue . DOT ID
   23       | lvalue . LBRACK exp RBRACK
   25 exp: lvalue .
   45    | lvalue . ASSIGN exp

    LBRACK  shift, and go to state 36
    DOT     shift, and go to state 37
    ASSIGN  shift, and go to state 38

    $default  reduce using rule 25 (exp)


state 14

    1 program: exp .
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 1 (program)


state 15

   31 exp: expseq .

    $default  reduce using rule 31 (exp)


state 16

   34 exp: ID LPAREN . paramlist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    $default  reduce using rule 62 (paramlist)

    lvalue       go to state 13
    exp          go to state 51
    expseq       go to state 15
    paramlist    go to state 52
    t_paramlist  go to state 53


state 17

   24 lvalue: ID LBRACK . exp RBRACK
   44 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 54
    expseq  go to state 15


state 18

   43 exp: ID LBRACE . fieldlist RBRACE

    ID  shift, and go to state 55

    $default  reduce using rule 58 (fieldlist)

    fieldlist    go to state 56
    t_fieldlist  go to state 57


state 19

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   56 t_explist: exp .
   57          | exp . SEMICOLON t_explist

    SEMICOLON  shift, and go to state 58
    OR         shift, and go to state 39
    AND        shift, and go to state 40
    GE         shift, and go to state 41
    GT         shift, and go to state 42
    LE         shift, and go to state 43
    LT         shift, and go to state 44
    NEQ        shift, and go to state 45
    EQ         shift, and go to state 46
    MINUS      shift, and go to state 47
    PLUS       shift, and go to state 48
    DIVIDE     shift, and go to state 49
    TIMES      shift, and go to state 50

    $default  reduce using rule 56 (t_explist)


state 20

   53 expseq: LPAREN explist . RPAREN

    RPAREN  shift, and go to state 59


state 21

   55 explist: t_explist .

    $default  reduce using rule 55 (explist)


state 22

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   46    | IF exp . THEN exp ELSE exp
   47    | IF exp . THEN exp

    THEN    shift, and go to state 60
    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50


state 23

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   48    | WHILE exp . DO exp

    DO      shift, and go to state 61
    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50


state 24

   49 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 62


state 25

   19 fundec: FUNCTION . ID LPAREN fields RPAREN EQ exp
   20       | FUNCTION . ID LPAREN fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 63


state 26

   17 vardec: VAR . ID ASSIGN exp
   18       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 64


state 27

    9 typedec: TYPE . ID EQ tpinfo

    ID  shift, and go to state 65


state 28

   51 exp: LET decs . IN explist END

    IN  shift, and go to state 66


state 29

    3 decs: t_decs .

    $default  reduce using rule 3 (decs)


state 30

    4 t_decs: dec . t_decs
    5       | dec .

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    $default  reduce using rule 5 (t_decs)

    t_decs   go to state 67
    dec      go to state 30
    typedec  go to state 31
    vardec   go to state 32
    fundec   go to state 33


state 31

    6 dec: typedec .

    $default  reduce using rule 6 (dec)


state 32

    7 dec: vardec .

    $default  reduce using rule 7 (dec)


state 33

    8 dec: fundec .

    $default  reduce using rule 8 (dec)


state 34

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | MINUS exp .
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    $default  reduce using rule 30 (exp)


state 35

    0 $accept: program $end .

    $default  accept


state 36

   23 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 68
    expseq  go to state 15


state 37

   22 lvalue: lvalue DOT . ID

    ID  shift, and go to state 69


state 38

   45 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 70
    expseq  go to state 15


state 39

   42 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 71
    expseq  go to state 15


state 40

   41 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 72
    expseq  go to state 15


state 41

   40 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 73
    expseq  go to state 15


state 42

   39 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 74
    expseq  go to state 15


state 43

   38 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 75
    expseq  go to state 15


state 44

   37 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 76
    expseq  go to state 15


state 45

   36 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 77
    expseq  go to state 15


state 46

   35 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 78
    expseq  go to state 15


state 47

   27 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 79
    expseq  go to state 15


state 48

   26 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 80
    expseq  go to state 15


state 49

   29 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 81
    expseq  go to state 15


state 50

   28 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 82
    expseq  go to state 15


state 51

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   64 t_paramlist: exp .
   65            | exp . COMMA t_paramlist

    COMMA   shift, and go to state 83
    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 64 (t_paramlist)


state 52

   34 exp: ID LPAREN paramlist . RPAREN

    RPAREN  shift, and go to state 84


state 53

   63 paramlist: t_paramlist .

    $default  reduce using rule 63 (paramlist)


state 54

   24 lvalue: ID LBRACK exp . RBRACK
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   44    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 85
    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50


state 55

   60 t_fieldlist: ID . EQ exp
   61            | ID . EQ exp COMMA t_fieldlist

    EQ  shift, and go to state 86


state 56

   43 exp: ID LBRACE fieldlist . RBRACE

    RBRACE  shift, and go to state 87


state 57

   59 fieldlist: t_fieldlist .

    $default  reduce using rule 59 (fieldlist)


state 58

   57 t_explist: exp SEMICOLON . t_explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue     go to state 13
    exp        go to state 19
    expseq     go to state 15
    t_explist  go to state 88


state 59

   53 expseq: LPAREN explist RPAREN .

    $default  reduce using rule 53 (expseq)


state 60

   46 exp: IF exp THEN . exp ELSE exp
   47    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 89
    expseq  go to state 15


state 61

   48 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 90
    expseq  go to state 15


state 62

   49 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 91
    expseq  go to state 15


state 63

   19 fundec: FUNCTION ID . LPAREN fields RPAREN EQ exp
   20       | FUNCTION ID . LPAREN fields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 92


state 64

   17 vardec: VAR ID . ASSIGN exp
   18       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 93
    ASSIGN  shift, and go to state 94


state 65

    9 typedec: TYPE ID . EQ tpinfo

    EQ  shift, and go to state 95


state 66

   51 exp: LET decs IN . explist END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    $default  reduce using rule 54 (explist)

    lvalue     go to state 13
    exp        go to state 19
    expseq     go to state 15
    explist    go to state 96
    t_explist  go to state 21


state 67

    4 t_decs: dec t_decs .

    $default  reduce using rule 4 (t_decs)


state 68

   23 lvalue: lvalue LBRACK exp . RBRACK
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    RBRACK  shift, and go to state 97
    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50


state 69

   22 lvalue: lvalue DOT ID .

    $default  reduce using rule 22 (lvalue)


state 70

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   45    | lvalue ASSIGN exp .

    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 45 (exp)


state 71

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   42    | exp OR exp .

    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 42 (exp)


state 72

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   41    | exp AND exp .
   42    | exp . OR exp

    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 41 (exp)


state 73

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   40    | exp GE exp .
   41    | exp . AND exp
   42    | exp . OR exp

    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 40 (exp)


state 74

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   39    | exp GT exp .
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 39 (exp)


state 75

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   38    | exp LE exp .
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 38 (exp)


state 76

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   37    | exp LT exp .
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 37 (exp)


state 77

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   36    | exp NEQ exp .
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 36 (exp)


state 78

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   35    | exp EQ exp .
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 35 (exp)


state 79

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   27    | exp MINUS exp .
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 27 (exp)


state 80

   26 exp: exp . PLUS exp
   26    | exp PLUS exp .
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 26 (exp)


state 81

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   29    | exp DIVIDE exp .
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    $default  reduce using rule 29 (exp)


state 82

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   28    | exp TIMES exp .
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    $default  reduce using rule 28 (exp)


state 83

   65 t_paramlist: exp COMMA . t_paramlist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue       go to state 13
    exp          go to state 51
    expseq       go to state 15
    t_paramlist  go to state 98


state 84

   34 exp: ID LPAREN paramlist RPAREN .

    $default  reduce using rule 34 (exp)


state 85

   24 lvalue: ID LBRACK exp RBRACK .
   44 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 99

    $default  reduce using rule 24 (lvalue)


state 86

   60 t_fieldlist: ID EQ . exp
   61            | ID EQ . exp COMMA t_fieldlist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 100
    expseq  go to state 15


state 87

   43 exp: ID LBRACE fieldlist RBRACE .

    $default  reduce using rule 43 (exp)


state 88

   57 t_explist: exp SEMICOLON t_explist .

    $default  reduce using rule 57 (t_explist)


state 89

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   46    | IF exp THEN exp . ELSE exp
   47    | IF exp THEN exp .

    ELSE    shift, and go to state 101
    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    ELSE      [reduce using rule 47 (exp)]
    OR        [reduce using rule 47 (exp)]
    AND       [reduce using rule 47 (exp)]
    GE        [reduce using rule 47 (exp)]
    GT        [reduce using rule 47 (exp)]
    LE        [reduce using rule 47 (exp)]
    LT        [reduce using rule 47 (exp)]
    NEQ       [reduce using rule 47 (exp)]
    EQ        [reduce using rule 47 (exp)]
    MINUS     [reduce using rule 47 (exp)]
    PLUS      [reduce using rule 47 (exp)]
    DIVIDE    [reduce using rule 47 (exp)]
    TIMES     [reduce using rule 47 (exp)]
    $default  reduce using rule 47 (exp)


state 90

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   48    | WHILE exp DO exp .

    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    OR        [reduce using rule 48 (exp)]
    AND       [reduce using rule 48 (exp)]
    GE        [reduce using rule 48 (exp)]
    GT        [reduce using rule 48 (exp)]
    LE        [reduce using rule 48 (exp)]
    LT        [reduce using rule 48 (exp)]
    NEQ       [reduce using rule 48 (exp)]
    EQ        [reduce using rule 48 (exp)]
    MINUS     [reduce using rule 48 (exp)]
    PLUS      [reduce using rule 48 (exp)]
    DIVIDE    [reduce using rule 48 (exp)]
    TIMES     [reduce using rule 48 (exp)]
    $default  reduce using rule 48 (exp)


state 91

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   49    | FOR ID ASSIGN exp . TO exp DO exp

    TO      shift, and go to state 102
    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50


state 92

   19 fundec: FUNCTION ID LPAREN . fields RPAREN EQ exp
   20       | FUNCTION ID LPAREN . fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 103

    $default  reduce using rule 13 (fields)

    fields    go to state 104
    t_fields  go to state 105


state 93

   18 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 106


state 94

   17 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 107
    expseq  go to state 15


state 95

    9 typedec: TYPE ID EQ . tpinfo

    ID      shift, and go to state 108
    LBRACE  shift, and go to state 109
    ARRAY   shift, and go to state 110

    tpinfo  go to state 111


state 96

   51 exp: LET decs IN explist . END

    END  shift, and go to state 112


state 97

   23 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 23 (lvalue)


state 98

   65 t_paramlist: exp COMMA t_paramlist .

    $default  reduce using rule 65 (t_paramlist)


state 99

   44 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 113
    expseq  go to state 15


state 100

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   60 t_fieldlist: ID EQ exp .
   61            | ID EQ exp . COMMA t_fieldlist

    COMMA   shift, and go to state 114
    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 60 (t_fieldlist)


state 101

   46 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 115
    expseq  go to state 15


state 102

   49 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 116
    expseq  go to state 15


state 103

   15 t_fields: ID . COLON ID
   16         | ID . COLON ID COMMA t_fields

    COLON  shift, and go to state 117


state 104

   19 fundec: FUNCTION ID LPAREN fields . RPAREN EQ exp
   20       | FUNCTION ID LPAREN fields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 118


state 105

   14 fields: t_fields .

    $default  reduce using rule 14 (fields)


state 106

   18 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 119


state 107

   17 vardec: VAR ID ASSIGN exp .
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 17 (vardec)


state 108

   10 tpinfo: ID .

    $default  reduce using rule 10 (tpinfo)


state 109

   11 tpinfo: LBRACE . fields RBRACE

    ID  shift, and go to state 103

    $default  reduce using rule 13 (fields)

    fields    go to state 120
    t_fields  go to state 105


state 110

   12 tpinfo: ARRAY . OF ID

    OF  shift, and go to state 121


state 111

    9 typedec: TYPE ID EQ tpinfo .

    $default  reduce using rule 9 (typedec)


state 112

   51 exp: LET decs IN explist END .

    $default  reduce using rule 51 (exp)


state 113

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   44    | ID LBRACK exp RBRACK OF exp .

    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    OR        [reduce using rule 44 (exp)]
    AND       [reduce using rule 44 (exp)]
    GE        [reduce using rule 44 (exp)]
    GT        [reduce using rule 44 (exp)]
    LE        [reduce using rule 44 (exp)]
    LT        [reduce using rule 44 (exp)]
    NEQ       [reduce using rule 44 (exp)]
    EQ        [reduce using rule 44 (exp)]
    MINUS     [reduce using rule 44 (exp)]
    PLUS      [reduce using rule 44 (exp)]
    DIVIDE    [reduce using rule 44 (exp)]
    TIMES     [reduce using rule 44 (exp)]
    $default  reduce using rule 44 (exp)


state 114

   61 t_fieldlist: ID EQ exp COMMA . t_fieldlist

    ID  shift, and go to state 55

    t_fieldlist  go to state 122


state 115

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   46    | IF exp THEN exp ELSE exp .

    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    OR        [reduce using rule 46 (exp)]
    AND       [reduce using rule 46 (exp)]
    GE        [reduce using rule 46 (exp)]
    GT        [reduce using rule 46 (exp)]
    LE        [reduce using rule 46 (exp)]
    LT        [reduce using rule 46 (exp)]
    NEQ       [reduce using rule 46 (exp)]
    EQ        [reduce using rule 46 (exp)]
    MINUS     [reduce using rule 46 (exp)]
    PLUS      [reduce using rule 46 (exp)]
    DIVIDE    [reduce using rule 46 (exp)]
    TIMES     [reduce using rule 46 (exp)]
    $default  reduce using rule 46 (exp)


state 116

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   49    | FOR ID ASSIGN exp TO exp . DO exp

    DO      shift, and go to state 123
    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50


state 117

   15 t_fields: ID COLON . ID
   16         | ID COLON . ID COMMA t_fields

    ID  shift, and go to state 124


state 118

   19 fundec: FUNCTION ID LPAREN fields RPAREN . EQ exp
   20       | FUNCTION ID LPAREN fields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 125
    EQ     shift, and go to state 126


state 119

   18 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 127
    expseq  go to state 15


state 120

   11 tpinfo: LBRACE fields . RBRACE

    RBRACE  shift, and go to state 128


state 121

   12 tpinfo: ARRAY OF . ID

    ID  shift, and go to state 129


state 122

   61 t_fieldlist: ID EQ exp COMMA t_fieldlist .

    $default  reduce using rule 61 (t_fieldlist)


state 123

   49 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 130
    expseq  go to state 15


state 124

   15 t_fields: ID COLON ID .
   16         | ID COLON ID . COMMA t_fields

    COMMA  shift, and go to state 131

    $default  reduce using rule 15 (t_fields)


state 125

   20 fundec: FUNCTION ID LPAREN fields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 132


state 126

   19 fundec: FUNCTION ID LPAREN fields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 133
    expseq  go to state 15


state 127

   18 vardec: VAR ID COLON ID ASSIGN exp .
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 18 (vardec)


state 128

   11 tpinfo: LBRACE fields RBRACE .

    $default  reduce using rule 11 (tpinfo)


state 129

   12 tpinfo: ARRAY OF ID .

    $default  reduce using rule 12 (tpinfo)


state 130

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp
   49    | FOR ID ASSIGN exp TO exp DO exp .

    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    OR        [reduce using rule 49 (exp)]
    AND       [reduce using rule 49 (exp)]
    GE        [reduce using rule 49 (exp)]
    GT        [reduce using rule 49 (exp)]
    LE        [reduce using rule 49 (exp)]
    LT        [reduce using rule 49 (exp)]
    NEQ       [reduce using rule 49 (exp)]
    EQ        [reduce using rule 49 (exp)]
    MINUS     [reduce using rule 49 (exp)]
    PLUS      [reduce using rule 49 (exp)]
    DIVIDE    [reduce using rule 49 (exp)]
    TIMES     [reduce using rule 49 (exp)]
    $default  reduce using rule 49 (exp)


state 131

   16 t_fields: ID COLON ID COMMA . t_fields

    ID  shift, and go to state 103

    t_fields  go to state 134


state 132

   20 fundec: FUNCTION ID LPAREN fields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 135


state 133

   19 fundec: FUNCTION ID LPAREN fields RPAREN EQ exp .
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 19 (fundec)


state 134

   16 t_fields: ID COLON ID COMMA t_fields .

    $default  reduce using rule 16 (t_fields)


state 135

   20 fundec: FUNCTION ID LPAREN fields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 136
    expseq  go to state 15


state 136

   20 fundec: FUNCTION ID LPAREN fields RPAREN COLON ID EQ exp .
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   35    | exp . EQ exp
   36    | exp . NEQ exp
   37    | exp . LT exp
   38    | exp . LE exp
   39    | exp . GT exp
   40    | exp . GE exp
   41    | exp . AND exp
   42    | exp . OR exp

    OR      shift, and go to state 39
    AND     shift, and go to state 40
    GE      shift, and go to state 41
    GT      shift, and go to state 42
    LE      shift, and go to state 43
    LT      shift, and go to state 44
    NEQ     shift, and go to state 45
    EQ      shift, and go to state 46
    MINUS   shift, and go to state 47
    PLUS    shift, and go to state 48
    DIVIDE  shift, and go to state 49
    TIMES   shift, and go to state 50

    $default  reduce using rule 20 (fundec)
